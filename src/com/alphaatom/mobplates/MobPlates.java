package com.alphaatom.mobplates;

import java.io.File;
import java.util.logging.Logger;

import org.bukkit.ChatColor;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.entity.Player;
import org.bukkit.plugin.PluginDescriptionFile;
import org.bukkit.plugin.PluginManager;
import org.bukkit.plugin.java.JavaPlugin;

public class MobPlates extends JavaPlugin {
	
	public static MobPlates plugin;
	public final InteractListener interactListener = new InteractListener(this);
	public final PInteractListener pListener = new PInteractListener(this);
	public final Logger logger = Logger.getLogger("Minecraft");
	public static FileConfiguration config;
	
	@Override
	public void onDisable() {
		PluginDescriptionFile pdffile = this.getDescription();
		this.logger.info(pdffile.getName() + " is now deactivated. Thanks for using!");
	}
	
	@Override
	public void onEnable() {
		PluginManager pm = getServer().getPluginManager();
		pm.registerEvents(this.interactListener, this);
		pm.registerEvents(this.pListener, this);
		PluginDescriptionFile pdffile = this.getDescription();
		this.logger.info(pdffile.getName() + " v" + pdffile.getVersion() + " is now enabled! Enjoy!");
		try {
			config = getConfig();
			File MobPlates = new File("plugins" + File.separator + "MobPlates" + File.separator + "config.yml");
			MobPlates.mkdir();
			if (!config.contains("Notice")) {
				config.set("Notice", "DO NOT EDIT THIS FILE. If you don't understand this file, good, you don't need to.");
			}
			saveConfig();
			this.logger.info("Succesfully loaded configuration file!");
		} catch(Exception e1) {
			e1.printStackTrace();
		}
	}
	
	public boolean onCommand(CommandSender sender, Command cmd, String commandLabel, String[] args) {
		if (sender instanceof Player) {
			if (cmd.getName().equalsIgnoreCase("mplate")) {
					String arguments = arrayToString(args);
					String arg = arguments.toLowerCase();
					if (arg.contains("blaze") || arg.contains("cavespider") || arg.contains("chicken") || arg.contains("cow") || arg.contains("creeper") || arg.contains("enderman") || arg.contains("ghast") || arg.contains("irongolem") || arg.contains("item") || arg.contains("magmacube") || arg.contains("mooshroom") || arg.contains("ocelot") || arg.contains("pig") || arg.contains("pigman") || arg.contains("player") || arg.contains("sheep") || arg.contains("silverfish") || arg.contains("skeleton") || arg.contains("slime") || arg.contains("snowman") || arg.contains("spider") || arg.contains("squid") || arg.contains("villager") || arg.contains("wolf") || arg.contains("zombie")) {
						CommandEnabled.CommandEnabled.put((Player) sender, arg);
						sender.sendMessage(ChatColor.AQUA + "Please click a pressure plate to complete the registration");
						return true;
					} else {
						sender.sendMessage(ChatColor.RED + "Invalid argument(s). Valid arguments: Blaze, CaveSpider, Chicken, Cow, Creeper, Enderman, Ghast, IronGolem, Item, MagmaCube, Mooshroom, Ocelot, Pig, PigMan, Player, Sheep, SilverFish, Skeleton, Slime, Snowman, Spider, Squid, Villager, Wolf, Zombie");
						return true;
					}
			}
			if (cmd.getName().equalsIgnoreCase("mremove")) {
				sender.sendMessage(ChatColor.AQUA + "Please click a pressure plate to remove the registration");
				CommandEnabled.CommandEnabled.put((Player) sender, "remove");
			}
		}
		return false;
	}
	
	public String arrayToString(String[] stringarray) {
		  String str = " ";
		  for (int i = 0; i < stringarray.length; i++) {
			  str = str + stringarray[i];
		  }
		  return str;
	}
	
}

